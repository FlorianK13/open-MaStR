{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>The Marktstammdatenregister (MaStR) is a German register  provided by the German Federal Network Agency (Bundesnetzagentur / BNetza) that keeps track of all power and gas units located in Germany.</p> <p>The MaStR data can be accessed via various options:</p> <ol> <li>browse, filter and download online</li> <li>download daily provided dumps</li> <li>access via the web service</li> </ol> <p>The python package <code>open-mastr</code> provides an interface for accessing the data.  It contains methods to download and parse the xml files (bulk) and the SOAP web service (API). In this repository we are developing methods to analyze, validate and enrich the data. We want to collect and compile post processing scripts to improve data quality.</p> <p>Just here for the data?</p> <p> We regularly run the whole download and cleansing pipeline and upload the dataset as csv files at zenodo! </p>"},{"location":"#contribution-of-open-mastr","title":"Contribution of open-mastr","text":"<p>MaStR-users face different barriers to access data depending on the access option above.  open-mastr facilitates overcoming these barriers:</p> use case aim MaStR access option MaStR barrier MaStR data format target data format open-mastr support 1 get MaStR data 1 csv-chunks limited to 5000 data rows at a time csv csv export all MaStR data to csv from local database 2 data must be unpacked from XML XML ORM database (postgres-sql or sqlite or custom) unpack XML files to ORM database 3 10000 API calls per day  develop code to access MaStR SOAP API ORM database (postgres-sql or sqlite or custom) Python wrapper to access MaStR SOAP API"},{"location":"#license","title":"License","text":"<p>The original dataset is licensed under the Datenlizenz Deutschland \u2013 Namensnennung \u2013 Version 2.0 (DL-DE-BY-2.0) Marktstammdatenregister - \u00a9 Bundesnetzagentur f\u00fcr Elektrizit\u00e4t, Gas, Telekommunikation, Post und Eisenbahnen | DL-DE-BY-2.0</p>"},{"location":"data-release-notes/","title":"Data release notes","text":""},{"location":"data-release-notes/#release-notes-and-version-history","title":"Release notes and version history","text":""},{"location":"data-release-notes/#api-download-versions","title":"API download versions","text":""},{"location":"data-release-notes/#dataversion-2022-05-16-ba","title":"dataversion-2022-05-16-BA","text":"<ul> <li>Complete restructure of the software</li> <li>Include XML download</li> <li>Switch to CalVer for data versioning #221</li> <li>Update to OEMetadata v1.5.1</li> </ul>"},{"location":"data-release-notes/#dataversion-220-2019-12-05","title":"dataversion-2.2.0 (2019-12-05)","text":"<ul> <li>Code version v0.9.0</li> <li>Includes: wind; hydro; biomass</li> <li>new power-unit download: true</li> </ul>"},{"location":"data-release-notes/#dataversion-212","title":"dataversion-2.1.2","text":"<ul> <li>Code version v0.9.0</li> <li>Includes: wind; hydro; biomass</li> </ul>"},{"location":"data-release-notes/#dataversion-15","title":"dataversion-1.5","text":"<ul> <li>Includes: wind-permits; storages; solar; basic postprocessing</li> </ul>"},{"location":"data-release-notes/#dataversion-14","title":"dataversion-1.4","text":"<ul> <li>Includes: permit data for wind and updated metadata</li> </ul>"},{"location":"data-release-notes/#dataversion-13","title":"dataversion-1.3","text":""},{"location":"data-release-notes/#dataversion-12","title":"dataversion-1.2","text":""},{"location":"data-release-notes/#dataversion-11","title":"dataversion-1.1","text":""},{"location":"data-release-notes/#dataversion-10","title":"dataversion-1.0","text":"<p>Test version</p>"},{"location":"dataset/","title":"Dataset","text":""},{"location":"dataset/#background","title":"Background","text":"<p>The Marktstammdatenregister (MaStR) is operated by the German Federal Network Agency (de: Bundesnetzagentur, short: BNetzA) since January 31, 2019 as a central online database for data related to the German energy system. Owners of electricity or gas generating plants are obliged to report master data on themselves and their plants. Additionally, plants consuming large amounts of electricity have to be registered if they are connected to at least a high-voltage electricity grid.</p> <p>Most information on units is openly accessible. The data is published under an open data license, the Data licence Germany \u2013 attribution \u2013 version 2.0 (DL-DE-BY-2.0) and can be downloaded, used and republished with no restriction if proper attribution to the Bundesnetzagentur is given. For units with a net capacity of up to 30 kW, some location information is restricted from publication. This applies to street name, house number, parcel designation and exact coordinates of units. The most granular location information accessible for all units is the postal code or the municipality.</p> <p>Within our paper Analyzing Data Reliability in Germany's Energy System: A Validation of Unit Locations of the Marktstammdatenregister we give further insights into the content and quality of the dataset.</p>"},{"location":"dataset/#content","title":"Content","text":"<p>The German Federal Network Agency regularly updates the dataset and adds new tables and attributes. Hence, the primary resource of information about the dataset should be the original website:</p> <ul> <li>Get information about the <code>bulk</code> data here (in german)</li> <li>Get information about the <code>API</code> data here (in german)</li> </ul>"},{"location":"dataset/#difference-between-bulk-and-api-dataset","title":"Difference between <code>bulk</code> and <code>API</code> dataset","text":"<p>As you might have noticed, we distinguish between <code>bulk</code> and <code>API</code> datasets. With the <code>bulk</code> dataset we mean the data obtained from the zipped xml-files downloaded from here using the <code>Mastr.download</code>. The <code>API</code> data is obtained by requesting information via the SOAP-API and the <code>soap_api.download.MaStRDownload</code> module.</p> Why is the table structure in the open-mastr database as it is? <p>The structure of the database is historically determined by the data retrieved via API. (open-mastr existed before the XML-dump was provided).  See MaStR data model</p> Why does the XML table structure and some column headers are different to the data retrieved via API requests? <p>The difference in structure might stem from zipping the data to XML.  The reason for difference in column  header naming is unknown to us. However, open-mastr maps XML-dump columns to API columns.</p>"},{"location":"dataset/#tables-in-the-database","title":"Tables in the database","text":"<p>Confused by all the tables?</p> <p> We regularly run the whole download and cleansing pipeline and upload the dataset as csv files at zenodo! </p> <p>After downloading the MaStR, you will find a database with a large number of tables. Here we give a brief overview of what you can find in those tables:</p> How are the database tables created from the XML files? How are the csv files created from the database tables? <p>FIXME: how to link to Reference section?</p>"},{"location":"dataset/#fixme-link-to-bulk-reference","title":"FIXME: link to bulk reference","text":""},{"location":"dataset/#_extended-tables","title":"_extended tables","text":"<p>The main information about the different technologies lies in the <code>_extended</code> tables. You can find the capacity, location, and other technology-specific attributes here.</p> _extended tables Comments biomass_extended combustion_extended Conventional powerplants: Gas, Oil, Coal, ... gsgk_extended gsgk is short for: Geothermal, Mine gas, and Pressure relaxation hydro_extended nuclear_extended solar_extended storage_extended wind_extended"},{"location":"dataset/#_eeg-tables","title":"_eeg tables","text":"<p>In germany, renewable energies were subsidized by the state - according to a law called 'EEG'. Relevant information like the 'EEG ID' are in the <code>_eeg</code> tables.</p> Tables in the database Comments biomass_eeg gsgk_eeg gsgk is short for: Geothermal, Mine gas, and Pressure relaxation hydro_eeg solar_eeg storage_eeg wind_eeg"},{"location":"dataset/#other-tables","title":"Other tables","text":"<p>Other tables contain information about the grid, the energy market, or gas consumers and producers:</p> Tables in the database Comments balancing_area Related to the energy market electricity_consumer Only large consumers gas_consumer Only large consumers gas_producer gas_storage gas_storage_extended grid_connections Does not contain geoinformation grids Does not contain geoinformation locations_extended Connects units with grids - to get coordinates of units use the _extended tables market_actors market_roles permit storage_units kwk short for: Combined heat and power (CHP)"},{"location":"dataset/#mastr-data-model","title":"MaStR data model","text":"<p>A useful overview of the MaStR data model can be found here (in german). A translated version using the names from the tables you can find in your local database is presented here: </p> <p></p>"},{"location":"getting_started/","title":"Getting Started","text":"<p>The intention of open-MaStR is to provide tools for receiving a complete as possible and accurate as possible list of power plant units based on the public registry Marktstammdatenregister (short: MaStR).</p>"},{"location":"getting_started/#downloading-the-mastr-data","title":"Downloading the MaStR data","text":"<p>For downloading the MaStR and saving it in a sqlite database, you will use the <code>Mastr</code> class and its <code>download</code> method. The <code>download</code> method offers two different ways to get the data by changing the <code>method</code> parameter (if not specified, <code>method</code> defaults to \"bulk\"):</p> <ol> <li><code>method</code> = \"bulk\": Get data via the bulk download from MaStR/Datendownload. Use this if you want to download the whole dataset (few Gigabite) or if you want to download all units of a given technology (e.g. all wind turbines in Germany).</li> <li><code>method</code> = \"API\": Get data via the MaStR SOAP-API. Use this if you want specific information about single units and if you have registerd to get an API token.</li> </ol>"},{"location":"getting_started/#bulk-download","title":"Bulk download","text":"<p>The following code block shows the basic download commands:</p> <pre><code>from open_mastr import Mastr\ndb = Mastr()\ndb.download()\n</code></pre> <p>When a <code>Mastr</code> object is initialized, a sqlite database is created in <code>$HOME/.open-MaStR/data/sqlite</code>. With the function <code>Mastr.download()</code>, the whole MaStR is downloaded in the zipped xml file format. It is then read into the sqlite database and simple data cleansing functions are started.</p> <p>More detailed information can be found in the section bulk download.</p>"},{"location":"getting_started/#api-download","title":"API download","text":"<p>When using <code>download(method=\"API\")</code>, the data is retrieved from the MaStR API. For using the MaStR API, credentials are needed (see SOAP API download).</p> <pre><code>from open_mastr import Mastr\ndb = Mastr()\ndb.download(method='API')\n</code></pre> <p>The default settings will save retrieved data into the sqlite database. The function can be used to mirror the open-MaStR database regularly without needing to download the provided dumps daily.</p>"},{"location":"getting_started/#accessing-the-database","title":"Accessing the database","text":"<p>For accessing and working with the MaStR database after you have downloaded it, you can use sqlite browsers  such as DB Browser for SQLite or any python module which can process sqlite data. Pandas, for example, comes with the function read_sql.</p> <pre><code>import pandas as pd\ntable=\"wind_extended\"\ndf = pd.read_sql(sql=table, con=db.engine)\n</code></pre>"},{"location":"getting_started/#exporting-data","title":"Exporting data","text":"<p>The tables in the database can be exported as csv files. While technology-related data is joined for each unit, additional tables are mirrored from database to csv as they are. To export the data you can use to method <code>to_csv</code></p> <pre><code>    tables=[\"wind\", \"grid\"]\ndb.to_csv(tables)\n</code></pre>"},{"location":"advanced/api_download/","title":"SOAP API Download","text":""},{"location":"advanced/api_download/#mastr-account-and-credentials","title":"MaStR account and credentials","text":"<p>For downloading data from the Marktstammdatenregister (MaStR) database via its API a registration is mandatory.</p> <p>To download data from the MaStR API using the <code>open-MaStR</code>, the credentials (MaStR user and token) need to be provided in a certain way. Three options exist:</p> <ol> <li> <p>Credentials file:      Both, user and token, are stored in plain text in the credentials file.     For storing the credentials in the credentials file (plus optionally using keyring for the token) simply instantiate     <code>MaStRDownload</code> once and you get asked for a user name and a token. The     information you insert will be used to create the credentials file.</p> <p>It is also possible to create the credentials file by hand, using this format:</p> <pre><code>    [MaStR]\n    user = SOM123456789012\n    token = ms\u00f6i\u00f6o8u2o29933n31733m\u00a7=\u00a71n33\u00a7304n... # optional, 540 characters\n</code></pre> <p>The <code>token</code> should be written in one line, without line breaks.</p> <p>The credentials file needs to be stored at: <code>$HOME/.open-MaStR/config/credentials.cfg</code></p> </li> <li> <p>Credentials file + keyring:      The user is stored in the credentials file, while the token is stored encrypted in the keyring.</p> <p>Read in the documentation of the keyring library how to store your token in the keyring.</p> </li> <li> <p>Don't store:      Just use the password for one query and forget it</p> <p>The latter option is only available when using :class:<code>open_mastr.soap_api.download.MaStRAPI</code>. Instantiate with</p> <pre><code>MaStRAPI(user='USERNAME', key='TOKEN')\n</code></pre> <p>to provide user and token in a script and use these credentials in subsequent queries.</p> </li> </ol>"},{"location":"advanced/api_download/#mastr-api","title":"Mastr API","text":"<p>chrwm</p>"},{"location":"advanced/api_download/#mastrdownload","title":"MastrDownload","text":"<p>chrwm</p>"},{"location":"advanced/api_download/#mastrmirror","title":"MastrMirror","text":"<p>chrwm  Decide to include or not - depending on use</p>"},{"location":"advanced/bulk_download/","title":"Bulk Download","text":"<p>On the homepage MaStR/Datendownload a zipped folder containing the whole MaStR is offered. The data is delivered as xml-files. The official documentation can be found  on the same page (in german). This data is updated on a daily base. </p> <p></p> <p>In the following, the process is described that is started when calling the <code>Mastr.download</code> function with the parameter <code>method</code>=\"bulk\".  First, the zipped files are downloaded and saved in <code>$HOME/.open-MaStR/data/xml_download</code>. The zipped folder contains many xml files, which represent the different tables from the MaStR. Those tables are then parsed to a sqlite database. If only some specific tables are of interest, they can be specified with the parameter <code>data</code>. Every table that is selected in <code>data</code> will be deleted from the local database, if existent, and then filled with data from the xml files.</p> <p>In the last step, a basic data cleansing is performed. Many entries in the MaStR from the bulk download are replaced by numbers. As an example, instead of writing the german states where the unit is registered (Saxony, Brandenburg, Bavaria, ...) the MaStR states  corresponding digits (7, 2, 9, ...). One major step of cleansing is therefore to replace those digits with their original meaning.  Moreover, the datatypes of different entries are set in the data cleansing process and corrupted files are repaired.</p> Bulk download trade-offs Advantages Disadvantages No registration for an API key is needed No single tables or entries can be downloaded Download of the whole dataset is possible Download takes long time"},{"location":"advanced/configuration/","title":"Configuration","text":""},{"location":"advanced/configuration/#choose-your-own-database","title":"Choose your own database","text":"<p>Configure your database with the <code>engine</code> parameter of <code>Mastr</code>. It defines the engine of the database where the MaStR is mirrored to. Default is 'sqlite'.</p> <p>The possible databases are:</p> <ul> <li>sqlite: By default the database will be stored in <code>$HOME/.open-MaStR/data/sqlite/open-mastr.db</code>.</li> <li>own database: The Mastr class accepts a sqlalchemy.engine.Engine object as engine which enables the user to   use any other desired database.   If you do so, you need to insert the connection parameter into the engine variable. It'll look like this:</li> </ul> <pre><code>  from sqlalchemy import create_engine\nengine_postgres = create_engine(\"postgresql+psycopg2://open-mastr:open-mastr@localhost:55443/open-mastr\")\nengine_sqlite = create_engine(\"sqlite:///path/to/sqlite/database.db\")\ndb = Mastr(engine=engine_sqlite)\n</code></pre>"},{"location":"advanced/configuration/#project-directory","title":"Project directory","text":"<p>The directory <code>$HOME/.open-MaStR</code> is automatically created. It is used to store configuration files and save data. Default config files are copied to this directory which can be modified - but with caution. The project home directory is structured as follows (files and folders below <code>data/</code> just an example).</p> <pre><code>    .open-MaStR/\n    \u251c\u2500\u2500 config\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 credentials.cfg\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 filenames.yml\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 logging.yml\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 tables.yml\n    \u251c\u2500\u2500 data\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 rli_v3.0.0\n    \u2502\u00a0\u00a0  \u00a0\u00a0 \u251c\u2500\u2500 bnetza_mastr_solar_eeg_fail.csv\n    \u2502\u00a0\u00a0  \u00a0\u00a0 \u251c\u2500\u2500 bnetza_mastr_solar_extended_fail.csv\n    \u2502\u00a0\u00a0  \u00a0\u00a0 \u2514\u2500\u2500 bnetza_mastr_solar_raw.csv\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 sqlite\n    \u2502\u00a0\u00a0  \u00a0\u00a0 \u2514\u2500\u2500 open-mastr.db\n        \u2514\u2500\u2500 xml_download\n            \u2514\u2500\u2500 Gesamtdatenexport.zip\n    \u2514\u2500\u2500 logs\n        \u2514\u2500\u2500 open_mastr.log\n</code></pre>"},{"location":"advanced/configuration/#configuration-files","title":"Configuration files","text":"<ul> <li><code>credentials.cfg</code>: Credentials used to access   <code>Marktstammdatenregister (MaStR) &lt;https://www.marktstammdatenregister.de/MaStR&gt;</code>_ API (read more in   <code>MaStR account and credentials &lt;MaStR account and credentials&gt;</code>) and token for Zenodo.</li> <li><code>filenames.yml</code>: File names are defined here.</li> <li><code>logging.yml</code>: Logging configuration. For changing the log level to increase or decrease details of log   messages, edit the <code>level</code> of the handlers.</li> <li><code>tables.yml</code>: Names of tables where data gets imported to during :ref:<code>Post-processing (Outdated)</code></li> </ul>"},{"location":"advanced/configuration/#logs","title":"Logs","text":"<p>For the download via the API, logs are stored in a single file in <code>/$HOME/cwm/.open-MaStR/logs/open_mastr.log</code>. New logging messages are appended. It is recommended to delete the log file from time to time because of its required disk space.</p>"},{"location":"advanced/configuration/#data","title":"Data","text":"<p>If the zipped dump of the MaStR is downloaded, it is saved in the folder <code>$HOME/.open-MaStR/data/xml_download</code>. New versions of the dump overwrite older versions. </p> <p>The data can then be written to any sql database supported by sqlalchemy. The type of the sql database is determined by the parameter <code>engine</code> in the Mastr class.</p> <p>For more information regarding the database see :ref:<code>Database settings &lt;Database settings&gt;</code>.</p> <p>Exported data is saved under <code>$HOME/.open-MaStR/data/&lt;data-version&gt;</code>. Files that are suffixed with <code>_raw</code> can contain joined data retrieved during :ref:<code>downloading &lt;Download&gt;</code>. The structure of the data is described in :ref:<code>Data Description</code>.</p>"},{"location":"advanced/configuration/#environment-variables","title":"Environment variables","text":"<p>There are some environment variables to customize open-MaStR:</p> variable description example SQLITE_DATABASE_PATH Path to the SQLite file. This allows to use to use multiple instances of the MaStR database. The database instances exist in parallel and are independent of each other. <code>/home/mastr-rabbit/.open-MaStR/data/sqlite/your_custom_instance_name.db</code>"},{"location":"advanced/configuration/#zenodo-token","title":"Zenodo token","text":"<p>Danger</p> <p>Do we want users to do this?</p> <p>Uploading data to <code>Zenodo &lt;https://www.zenodo.org/&gt;</code> requires authentication. When logged in with your account you can <code>create tokens &lt;https://zenodo.org/account/settings/applications/tokens/new/&gt;</code> for API requests.</p> <p>The section in <code>credentials.cfg</code> looks like:</p> <p>.. code-block::</p> <pre><code>[Zenodo]\ntoken = voh6Zo2ohbohReith4ec2iezeiJ9Miefohso0DohK9ohtha6mahfame7hohc\n</code></pre>"},{"location":"advanced/welcome/","title":"","text":"<p>This section provides insights into </p>"},{"location":"development/changelog_mirror/","title":"Changelog","text":""},{"location":"development/changelog_mirror/#changelog","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file. For each version important additions, changes and removals are listed here. </p> <p>The format is inspired from Keep a Changelog and the versioning aims to respect Semantic Versioning.</p>"},{"location":"development/changelog_mirror/#v01xx-current-2023-xx-xx","title":"[v0.1X.X] current  - 2023-XX-XX","text":""},{"location":"development/changelog_mirror/#added","title":"Added","text":"<ul> <li>User-defined output path for csv, xml, database #402</li> </ul>"},{"location":"development/changelog_mirror/#changed","title":"Changed","text":"<ul> <li>Using sphinx version &lt;7 to build documentation #454</li> </ul>"},{"location":"development/changelog_mirror/#removed","title":"Removed","text":"<ul> <li>Delete <code>on push</code> for github workflow #445</li> </ul>"},{"location":"development/changelog_mirror/#v0132-hotfix-2023-08-07","title":"[v0.13.2] Hotfix - 2023-08-07","text":""},{"location":"development/changelog_mirror/#changed_1","title":"Changed","text":"<ul> <li>Changed the name of the bulk tables for technology=gsgk #456</li> </ul>"},{"location":"development/changelog_mirror/#v0131-hotfix-2023-04-11","title":"[v0.13.1] Hotfix - 2023-04-11","text":""},{"location":"development/changelog_mirror/#added_1","title":"Added","text":"<ul> <li>Add new table and new columns to the data model #440</li> </ul>"},{"location":"development/changelog_mirror/#v0130-maintenance-release-2023-02-16","title":"[v0.13.0] Maintenance release - 2023-02-16","text":""},{"location":"development/changelog_mirror/#added_2","title":"Added","text":"<ul> <li>Add a <code>workflow_dispatch</code> to run CI pipelines from a button click #389</li> <li>Update version number with bump2version #407</li> <li>Add usage examples to Readme #419</li> <li>Check if the zipped file is corrupted #422</li> <li>Add Issue and PR Templates #428</li> </ul>"},{"location":"development/changelog_mirror/#changed_2","title":"Changed","text":"<ul> <li>Repair the csv export #384</li> <li>Refactor csv export for better maintainability #401</li> <li>Replace numeric value in hydro_extended #392</li> <li>Fix DB query errors when using SQLAlchemy v2.0 #405</li> <li>New columns introduced #409</li> <li>Replace numeric value in combustion #413</li> <li>Filenames.yml is created everytime Mastr class is called #415</li> <li>Omit connectionless DB query (SQLAlchemy v2.0 compatibility) #421</li> </ul>"},{"location":"development/changelog_mirror/#removed_1","title":"Removed","text":"<ul> <li>Option to filter &amp; export by parameter StatistikFlag #401</li> <li>Removed unused package pynodo from dependencies #424</li> <li>Removed feature for dockered databases #426</li> </ul>"},{"location":"development/changelog_mirror/#v0121-patch-release-2022-11-15","title":"[v0.12.1] Patch release - 2022-11-15","text":""},{"location":"development/changelog_mirror/#added_3","title":"Added","text":"<ul> <li>Add workflows to release on PyPI and Test-PyPI #375</li> </ul>"},{"location":"development/changelog_mirror/#changed_3","title":"Changed","text":"<ul> <li>Change error handling for missing tables in postgres #370</li> </ul>"},{"location":"development/changelog_mirror/#v0120-minor-release-2022-11-07","title":"[v0.12.0] Minor Release - 2022-11-07","text":""},{"location":"development/changelog_mirror/#added_4","title":"Added","text":"<ul> <li>New table deleted_units #360</li> <li>Constants.py for central hardcoded variables #345</li> </ul>"},{"location":"development/changelog_mirror/#changed_4","title":"Changed","text":"<ul> <li>Handle case for empty list #362</li> <li>Fix bug occuring for permit and location download from the bulk download source #358</li> <li>Update documentation for readthedocs #356</li> <li>Update release procedure #355</li> <li>Update README.md to README.rst #354</li> <li>Technology parameter is renamed to data for better comprehension #337</li> <li>Update ORM and documentation according to wsdl patch V1.2.87 #352</li> <li>Date parameters are united into one parameter #353</li> <li>Dataversion folder entails export date#347</li> </ul>"},{"location":"development/changelog_mirror/#removed_2","title":"Removed","text":"<ul> <li>Removed code artefacts #335</li> </ul>"},{"location":"development/changelog_mirror/#v0117-patch-hotfix-2022-08-25","title":"[v0.11.7] Patch - Hotfix - 2022-08-25","text":""},{"location":"development/changelog_mirror/#changed_5","title":"Changed","text":"<ul> <li>Fix dependencies in setup.py #341</li> </ul>"},{"location":"development/changelog_mirror/#v0116-patch-hotfix-2022-08-17","title":"[v0.11.6] Patch - Hotfix - 2022-08-17","text":""},{"location":"development/changelog_mirror/#changed_6","title":"Changed","text":"<ul> <li>Repair technology paramter in API download #327</li> </ul>"},{"location":"development/changelog_mirror/#v0115-patch-repair-package-2022-08-16","title":"[v0.11.5] Patch - Repair package - 2022-08-16","text":""},{"location":"development/changelog_mirror/#added_5","title":"Added","text":"<ul> <li>Pre-commit hook for Black formatting #312</li> </ul>"},{"location":"development/changelog_mirror/#changed_7","title":"Changed","text":"<ul> <li>Use exclusively sqlalchemy for dialect-free implementation #289</li> <li>API Download: Linked units in table permit are written in comma seperated string #302</li> <li>API Download: Repaired Location download #303</li> <li>CSV export: Tables with mastr_data about power units are exported in chunks #306</li> <li>API Download: User credentials are now tested before the download starts #309</li> </ul>"},{"location":"development/changelog_mirror/#removed_3","title":"Removed","text":"<ul> <li>Delete the MastrDownloadFactory class #292</li> </ul>"},{"location":"development/changelog_mirror/#v0114-patch-hotfix-2022-07-08","title":"[v0.11.4] Patch - Hotfix - 2022-07-08","text":""},{"location":"development/changelog_mirror/#added_6","title":"Added","text":""},{"location":"development/changelog_mirror/#changed_8","title":"Changed","text":"<ul> <li>Move function cleaned_data to data_io #284</li> </ul>"},{"location":"development/changelog_mirror/#v0113-patch-a-data-release-2022-07-07","title":"[v0.11.3] Patch - A data release - 2022-07-07","text":""},{"location":"development/changelog_mirror/#added_7","title":"Added","text":"<ul> <li>Add warning message if the bulk download speed falls below a certain limit #256</li> <li>Add engine parameter for master class initialisation #270</li> </ul>"},{"location":"development/changelog_mirror/#changed_9","title":"Changed","text":"<ul> <li>Refactor code and restructure modules #273</li> <li>Fix combustion mapping #253</li> <li>Update bulk parsing order #257</li> <li>Apply csv method to all tables #275</li> </ul>"},{"location":"development/changelog_mirror/#v0112-patch-patch-the-package-2022-05-17","title":"[v0.11.2] Patch - Patch the package - 2022-05-17","text":""},{"location":"development/changelog_mirror/#changed_10","title":"Changed","text":"<ul> <li>Update readme.md to improve PyPi release #249</li> <li>Rename branches <code>dev</code> -&gt; <code>develop</code> and <code>master</code> -&gt; <code>production</code></li> </ul>"},{"location":"development/changelog_mirror/#v0111-patch-make-it-a-package-2022-05-16","title":"[v0.11.1] Patch - Make it a package - 2022-05-16","text":""},{"location":"development/changelog_mirror/#added_8","title":"Added","text":"<ul> <li>Add files and metadata for PyPi release #237</li> </ul>"},{"location":"development/changelog_mirror/#v0110-unreleased-forces-unite-2022-05-16","title":"[v0.11.0] Unreleased - Forces unite - 2022-05-16","text":"<p>The code becomes a python package and will be available on pypi.org Additionally, a new datasource was identified and can be used: the xml bulk download. The API was updated to the newest version and the data model was adapted.</p>"},{"location":"development/changelog_mirror/#added_9","title":"Added","text":"<ul> <li>The class :class:<code>open_mastr.mastr.Matr</code>    was introduced as the entrypoint for users, the API download was included in this entrypoint    #203</li> <li>A method for downloading and parsing the xml dump from the MaStR website   was implemented    #202</li> <li>New data classes and attributes were introduced to orm.py  #209</li> <li>The documentation page was updated</li> <li>Unit tests were created  #207</li> <li>A CI pipeline was introduced  #208</li> <li>The metadata was updated  #219</li> </ul>"},{"location":"development/changelog_mirror/#v0100-unreleased-refactoring-2020-10-08","title":"[v0.10.0] Unreleased - Refactoring - 2020-10-08","text":"<p>A complete refactoring took place! Downloading data was entirely changed; introducing layers of code and removing  duplicated code while more of less following DRY.  Moreover, post-processing was changed to be more accessible and easier to execute. For example, docker now helps to  spin up a database container. The documention on RTD was extended, update and improved to be more helpful for new users. Read more about the details:</p>"},{"location":"development/changelog_mirror/#added_10","title":"Added","text":"<ul> <li>added more technologies</li> <li>added documentation for ReadTheDocs</li> <li>improved parallel download</li> <li>merged all stale branches</li> <li>The class :class:<code>open_mastr.soap_api.mirror.MaStRMirror</code>    was introduced for mirroring MaStR data with latest updates    #149</li> <li>Introduce project home <code>~/.open-MaStR/config/</code> #120</li> <li>Documentation of post-processing #117</li> <li>Updated documentation of downloading data   #124 which is harmonized with the other parts of docs   and with GitHubs README #135</li> <li>Local execution of post-processing now possible, optionally in dockered database    #116</li> <li>Post-processing adapted to CSV data from :class:<code>open_mastr.soap_api.mirror.MaStRMirror</code> #172</li> <li>Tests for changed download code are added #131</li> <li>Metadata added for raw data as frictionless data package    #160</li> <li>Suffix columns instead of deferring in database CSV export   #157</li> <li>Code examples added for :class:<code>open_mastr.soap_api.mirror.MaStRMirror</code> explaining basic use of    mirroring database #164</li> <li>CSV file reader for MaStR raw data added   #181</li> <li>Zenodo data upload   #173   and the missing LICENSE file for Zenodo is fixed in   #186</li> <li>Add postgres database service in CI job for interacting with database in tests   #159</li> <li>Tests for :class:<code>open_mastr.soap_api.mirror.MaStRMirror</code> #191</li> <li>Download functionality for Lokationen (with focus on :class:<code>open_mastr.soap_api.mirror.MaStRMirror</code>)   #162</li> <li>The CHANGELOG is now included in the documentation</li> </ul>"},{"location":"development/changelog_mirror/#changed_11","title":"Changed","text":"<ul> <li>Download of raw data has entirely been refactored. A    python wrapper for querying    the MaStR API was introduced   #83</li> <li>Based on that, for bulk data download,    MaStRDownload provides handy query    functions for power unit data   #86. See also   #128</li> <li>configuration through config filen in <code>~/.open-MaStR/config/</code> with less hard-coded parameters in source files   #120,    #112</li> <li>move code into one package named <code>open_mastr</code> #123</li> <li>Switch to GitHub Actions for CI instead of Travis #143</li> <li>Fixed unexpected line breaks during CSV export that corrupted data    #170</li> <li>Filtering of duplicates in MaStR data (see    <code>MaStR help &lt;https://www.marktstammdatenregister.de/MaStRHilfe/subpages/statistik.html&gt;</code>_) got changed to filter   units by leading three characters and select only directly entered data   #180</li> <li>Generalize CSV reading function    #188</li> </ul>"},{"location":"development/changelog_mirror/#removed_4","title":"Removed","text":"<ul> <li>Most of prior code for downloading data</li> </ul>"},{"location":"development/changelog_mirror/#v090-initial-release-try-and-errors-2019-12-05","title":"[v0.9.0] Initial Release - Try and Errors - 2019-12-05","text":""},{"location":"development/changelog_mirror/#added_11","title":"Added","text":"<ul> <li>docstrings for functions</li> <li>tests</li> <li>setup.py file</li> <li>added update function (based on latest timestamp in powerunits csv)</li> <li>added wind functions </li> <li>only download power units for wind to avoid massive download</li> <li>changed : process units wind (\"one-click solution\")</li> <li>added loop to retry failed power unit downloads, currently one retry</li> <li>write failed downloads to file</li> </ul>"},{"location":"development/changelog_mirror/#changed_12","title":"Changed","text":"<ul> <li>rename <code>import-api</code> <code>soap_api</code></li> <li>update README with instruction for tests</li> <li>update README with instruction for setup</li> </ul>"},{"location":"development/changelog_mirror/#removed_5","title":"Removed","text":"<ul> <li>unused imports</li> <li>obsolete comments</li> </ul>"},{"location":"development/changelog_mirror/#fixed","title":"Fixed","text":"<ul> <li>power unit update</li> <li>filter technologies from power units</li> </ul>"},{"location":"development/changelog_mirror/#v080-2019-09-30","title":"[v0.8.0] 2019-09-30","text":""},{"location":"development/changelog_mirror/#added_12","title":"Added","text":"<ul> <li>README.md</li> <li>CHANGELOG.md</li> <li>CONTRIBUTING.md</li> <li>LICENSE</li> <li>continuous integration with TravisCI (<code>.travis.yml</code>)</li> <li>linting tests and their config files (<code>.pylintrc</code> and <code>.flake8</code>)</li> <li>requirements.txt</li> <li>parallelized download for power units and solar</li> <li>utils.py for utility functions</li> <li>added storage units download</li> <li>added wind permit download</li> <li>ontology folder (#46)</li> </ul>"},{"location":"development/changelog_mirror/#changed_13","title":"Changed","text":"<ul> <li>took the code from this repository's subfolder</li> </ul>"},{"location":"development/contributing_mirror/","title":"Contributing","text":""},{"location":"development/contributing_mirror/#collaborative-development","title":"Collaborative Development","text":""},{"location":"development/contributing_mirror/#prerequisites","title":"Prerequisites","text":"<ul> <li>Git</li> <li>GitHub</li> </ul>"},{"location":"development/contributing_mirror/#types-of-interaction","title":"Types of interaction","text":"<p>This repository is following the Contributor Covenant Code of Conduct.  Please be self-reflective and always maintain a good culture of discussion and active participation.</p>"},{"location":"development/contributing_mirror/#a-use","title":"A. Use","text":"<p>Since the open license allows free use, no notification is required.  However, for the authors it is valuable information who uses the software for what purpose.  Indicators are <code>Watch</code>, <code>Fork</code> and <code>Starred</code> of the repository.  If you are a user, please add your name and details in USERS.cff</p>"},{"location":"development/contributing_mirror/#b-comment","title":"B. Comment","text":"<p>You can give ideas, hints or report bugs in issues, in PR, at meetings or other channels.  This is no development but can be considered a notable contribution.  If you wish, add your name and details to <code>CITATION.cff</code>.</p>"},{"location":"development/contributing_mirror/#c-contribute-and-review","title":"C. Contribute and Review","text":"<p>You add code and become an author of the repository.  You must follow the workflow!</p>"},{"location":"development/contributing_mirror/#d-mantain-and-release","title":"D. Mantain and Release","text":"<p>You contribute and take care of the repository.  You review and answer questions.  You coordinate and carry out the release.</p>"},{"location":"development/contributing_mirror/#workflow","title":"Workflow","text":"<p>The workflow for contributing to this project has been inspired by the workflow described by Vincent Driessen.</p>"},{"location":"development/contributing_mirror/#1-describe-the-issue-on-github","title":"1. Describe the issue on GitHub","text":"<p>Create an issue in the GitHub repository.  The <code>issue title</code> describes the problem you will address.   This is an important step as it forces one to think about the \"issue\". Make a checklist for all needed steps if possible.</p>"},{"location":"development/contributing_mirror/#2-solve-the-issue-locally","title":"2. Solve the issue locally","text":""},{"location":"development/contributing_mirror/#20-get-the-latest-version-of-the-develop-branch","title":"2.0. Get the latest version of the <code>develop</code> branch","text":"<p>Load the <code>develop branch</code>: <pre><code>git checkout develop\n</code></pre></p> <p>Update with the latest version: <pre><code>git pull\n</code></pre></p>"},{"location":"development/contributing_mirror/#permanent-branches","title":"Permanent branches","text":"<ul> <li>production - includes the current stable version</li> <li>develop - includes all current developments</li> </ul>"},{"location":"development/contributing_mirror/#21-create-a-new-local-branch","title":"2.1. Create a new (local) branch","text":"<p>Create a new feature branch: <pre><code>git checkout -b feature-1314-my-feature\n</code></pre></p> <p>Naming convention for branches: <code>type</code>-<code>issue-nr</code>-<code>short-description</code></p>"},{"location":"development/contributing_mirror/#type","title":"<code>type</code>","text":"<ul> <li>feature - includes the feature that will be implemented</li> <li>hotfix - includes small improvements before an release, should be branched from a release branch</li> <li>release - includes the current version to be released</li> </ul> <p>The majority of the development will be done in <code>feature</code> branches.</p>"},{"location":"development/contributing_mirror/#issue-nr","title":"<code>issue-nr</code>","text":"<p>The <code>issueNumber</code> should be taken from Step 1. Do not use the \"#\". </p>"},{"location":"development/contributing_mirror/#short-description","title":"<code>short-description</code>","text":"<p>Describe shortly what the branch is about.  Avoid long and short descriptive names for branches, 2-4 words are optimal.</p>"},{"location":"development/contributing_mirror/#other-hints","title":"Other hints","text":"<ul> <li>Separate words with <code>-</code> (minus)</li> <li>Avoid using capital letters</li> <li>Do not put your name to the branch name, it's a collaborative project</li> <li>Branch names should be precise and informative</li> </ul> <p>Examples of branch names: <code>feature-42-add-new-ontology-class</code>, <code>feature-911-branch-naming-convention</code>, <code>hotfix-404-update-api</code>, <code>release-v0.10.0</code></p>"},{"location":"development/contributing_mirror/#22-start-editing-the-files","title":"2.2. Start editing the files","text":"<ul> <li>Divide your feature into small logical units</li> <li>Start to write the documentation or a docstring</li> <li>Don't rush, have the commit messages in mind</li> <li>Add your changes to the CHANGELOG.md</li> </ul> <p>On first commit to the repo: - Add your name and details to CITATION.cff</p> <p>Check branch status: <pre><code>git status\n</code></pre></p>"},{"location":"development/contributing_mirror/#23-commit-your-changes","title":"2.3. Commit your changes","text":"<p>If the file does not exist on the remote server yet, use: <pre><code>git add filename.md\n</code></pre></p> <p>Then commit regularly with: <pre><code>git commit filename.md\n</code></pre></p> <p>Write a good <code>commit message</code>: - \"If applied, this commit will ...\" - Follow existing conventions for commit messages - Keep the subject line shorter than 50 characters - Do not commit more than a few changes at the time: atomic commits - Use imperative - Do not end the commit message with a period ~~.~~  - Allways end the commit message with the <code>issueNumber</code> including the \"#\"</p> <p>Examples of commit message: <code>Added function with some method #42</code> or <code>Update documentation for commit messages #1</code></p>"},{"location":"development/contributing_mirror/#24-fix-your-latest-commit-message","title":"2.4 Fix your latest commit message","text":"<p>Do you want to improve your latest commit message?  Is your latest commit not pushed yet?  Edit the commit message of your latest commit: <pre><code>git commit --amend\n</code></pre></p>"},{"location":"development/contributing_mirror/#3-push-your-commits","title":"3. Push your commits","text":"<p>Push your <code>local</code> branch on the remote server <code>origin</code>.  If your branch does not exist on the remote server yet, use: <pre><code>git push --set-upstream origin feature-1314-my-feature\n</code></pre></p> <p>Then push regularly with: <pre><code>git push\n</code></pre></p>"},{"location":"development/contributing_mirror/#4-submit-a-pull-request-pr","title":"4. Submit a pull request (PR)","text":"<p>Follow the GitHub guide creating-a-pull-request.  The PR should be directed: <code>base: develop</code> &lt;- <code>compare: feature-1-collaboration</code>.  Add the line <code>Close #&lt;issue-number&gt;</code> in the description of your PR. When it is merged, it automatically closes the issue.  Assign a reviewer and get in contact.</p>"},{"location":"development/contributing_mirror/#40-let-someone-else-review-your-pr","title":"4.0. Let someone else review your PR","text":"<p>Follow the GitHub guide approving a pull request with required reviews.  Assign one reviewer or a user group and get into contact.</p> <p>If you are the reviewer: - Check the changes in all corresponding files. - Checkout the branch and run code. - Comment if you would like to change something (Use <code>Request changes</code>) - If all tests pass and all changes are good, <code>Approve</code> the PR.  - Leave a comment and some nice words!</p>"},{"location":"development/contributing_mirror/#41-merge-the-pr","title":"4.1. Merge the PR","text":"<p>Follow the GitHub guide merging a pull request.</p>"},{"location":"development/contributing_mirror/#42-delete-the-feature-branch","title":"4.2. Delete the feature branch","text":"<p>Follow the GitHub guide deleting a branch.</p>"},{"location":"development/contributing_mirror/#5-close-the-issue","title":"5. Close the issue","text":"<p>Document the result in a few sentences and close the issue.  Check that all steps have been documented:</p> <ul> <li>Issue title describes the problem you solved?</li> <li>All commit messages are linked in the issue?</li> <li>The branch was deleted?</li> <li>Entry in CHANGELOG.md?</li> <li>PR is closed?</li> <li>Issue is closed?</li> </ul>"},{"location":"development/release_procedure_mirror/","title":"Release Procedure","text":""},{"location":"development/release_procedure_mirror/#release-procedure","title":"Release Procedure","text":"<p>The release procedure is a process in which different parts of the repository are involved. These symbols help with orientation: * \ud83d\udc19 GitHub * \ud83d\udca0 git (Bash) * \ud83d\udcdd File * \ud83d\udcbb Command Line (CMD) * \ud83d\udce6 Package</p>"},{"location":"development/release_procedure_mirror/#version-numbers","title":"Version Numbers","text":"<p>This software follows the Semantic Versioning (SemVer). It always has the format <code>MAJOR.MINOR.PATCH</code>, e.g. <code>1.5.0</code>.</p> <p>The data follows the Calendar Versioning (CalVer). It always has the format <code>YYYY-MM-DD</code>, e.g. <code>2022-05-16</code>.</p>"},{"location":"development/release_procedure_mirror/#github-and-pypi-release","title":"GitHub and PyPI Release","text":""},{"location":"development/release_procedure_mirror/#1-create-a-github-issue","title":"1. \ud83d\udc19 Create a <code>GitHub Issue</code>","text":"<ul> <li>Named <code>Release Patch v0.12.1</code></li> <li>Use <code>\ud83d\udcddISSUE_TEMPLATE_RELEASE</code> (\u2757ToDo\u2757)</li> <li>Discuss a good and suitable name of the release</li> <li>Define a day for the release</li> </ul> <p>\u25b6\ufe0f This issue documents the status of the release!</p>"},{"location":"development/release_procedure_mirror/#2-create-a-github-project","title":"2. \ud83d\udc19 Create a <code>GitHub Project</code>","text":"<ul> <li>Create New classic project</li> <li>Use the project template Automated kanban with reviews</li> <li>Named <code>Release v0.12.1</code></li> <li>Add a meaningful description</li> <li>Track project progress</li> </ul> <p>\u25b6\ufe0f It gives an overview of open and finished issues and pull requests!</p>"},{"location":"development/release_procedure_mirror/#3-create-a-draft-github-release","title":"3. \ud83d\udc19 Create a <code>Draft GitHub Release</code>","text":"<ul> <li>Draft a new release</li> <li>Enter the release version number <code>v0.12.1</code> as title</li> <li>Summarize key changes in the description<ul> <li>Use the <code>generate release notes</code> button provided by github</li> </ul> </li> <li>Save draft</li> </ul>"},{"location":"development/release_procedure_mirror/#4-finish-all-planned-developments","title":"4. \ud83d\udc19 Finish all planned Developments","text":"<ul> <li>Some days before the release, inform all developers</li> <li>Merge the open pull requests</li> <li>On release day, start the release early to ensure sufficient time for reviews</li> <li>Merge everything on the <code>develop</code> branch</li> </ul>"},{"location":"development/release_procedure_mirror/#5-create-a-release-branch","title":"5. \ud83d\udca0 Create a <code>release</code> branch","text":"<ul> <li>Checkout <code>develop</code> and branch with <code>git checkout -b release-v0.12.1</code></li> <li>Update version for test release with e.g. <code>bump2version patch</code>. To specify version numbers manually use <code>bump2version --current-version &lt;current_version&gt; --new-version &lt;new_version&gt; patch</code></li> <li>Commit version update with <code>git commit -am \"version update v0.12.1a1\"</code></li> <li>Push branch with <code>git push --set-upstream origin release-v0.12.1</code></li> </ul>"},{"location":"development/release_procedure_mirror/#6-check-release-on-test-pypi","title":"6. Check release on Test-PyPI","text":"<ul> <li>Check if the release it correctly displayed on Test-PyPI</li> <li>With each push to the release branch or the branch <code>test-release</code> the package is released on Test-PyPI by GitHub workflow (test-pypi-publish.yml).</li> <li>Note: Pre-releases on Test-PyPI are only shown under <code>Release history</code> in the navigation bar.</li> <li>Note: The branch status can only be released to a version on Test-PyPI once. Thus, for every branch status that you want to see on Test-PyPI increment the build version with <code>bump2version build</code> and push afterwards.</li> <li>Once testing on Test-PyPI is done, change the release version to the final desired version with <code>bump2version release</code></li> <li>Note: The release on Test-PyPI might fail, but it will be the correct release version for the PyPI server.</li> <li>Push commits to the <code>release-*</code> branch</li> </ul>"},{"location":"development/release_procedure_mirror/#7-update-the-version-files","title":"7. \ud83d\udcdd Update the version files","text":"<ul> <li><code>\ud83d\udcddCHANGELOG.md</code><ul> <li>All Pull Request are included</li> <li>Add a new section with correct version number</li> <li>Give the suitable name to the release</li> </ul> </li> <li><code>\ud83d\udcddCITATION.cff</code><ul> <li>Update <code>date-released</code></li> </ul> </li> </ul>"},{"location":"development/release_procedure_mirror/#8-create-a-release-pull-request","title":"8. \ud83d\udc19 Create a <code>Release Pull Request</code>","text":"<ul> <li>Use <code>\ud83d\udcddPR_TEMPLATE_RELEASE</code> (\u2757ToDo\u2757)</li> <li>Merge <code>release</code> into <code>production</code> branch</li> <li>Assign two reviewers to check the release</li> <li>Run all test</li> <li>Execute the software locally</li> <li>Wait for reviews and tests</li> <li>Merge PR and delete <code>release</code> branch</li> </ul>"},{"location":"development/release_procedure_mirror/#9-set-the-git-tag","title":"9. \ud83d\udca0 Set the <code>Git Tag</code>","text":"<ul> <li>Checkout <code>production</code> branch and pull</li> <li>Check existing tags <code>git tag -n</code></li> <li>Create new tag: <code>git tag -a v0.12.1 -m \"open-mastr release v0.12.1 with PyPI\"</code></li> <li>This commit will be the final version for the release, breath three times and check again</li> <li>Push tag: <code>git push --tags</code></li> <li>If you messed up, remove tags and start again<ul> <li>Delete local tag: <code>git tag -d v0.12.1</code></li> <li>Delete remote tag: <code>git push --delete origin v0.12.1</code></li> </ul> </li> </ul>"},{"location":"development/release_procedure_mirror/#10-publish-release-on-github-and-pypi","title":"10. \ud83d\udc19 Publish <code>Release</code> on GitHub and PyPI","text":"<ul> <li>Navigate to your releases on GitHub and open your draft release.</li> <li>Summarize key changes in the description</li> <li>Choose the correct git <code>tag</code></li> <li>Choose the <code>production</code> branch</li> <li>Publish release</li> </ul> <p>\u25b6\ufe0f Release on GitHub!</p> <p>\u25b6\ufe0f In the background the GitHub workflow (pypi-publish.yml) will publish the package \ud83d\udce6 on PyPI!</p>"},{"location":"development/release_procedure_mirror/#11-set-up-new-development","title":"11. \ud83d\udc19 Set up new development","text":"<ul> <li>Create a Pull request from <code>production</code> to <code>develop</code></li> <li>Create a new unreleased section in the <code>\ud83d\udcddCHANGELOG.md</code> <pre><code>## [v0.XX.X] unreleased\n### Added\n### Changed\n### Removed\n</code></pre></li> </ul> <p>\u25b6\ufe0f Continue the developments \ud83d\udee0</p>"},{"location":"development/release_procedure_mirror/#documentation-on-read-the-docs-rtd","title":"Documentation on Read the Docs (RTD)","text":"<p>ToDo</p>"},{"location":"development/release_procedure_mirror/#sources","title":"Sources:","text":"<ul> <li>https://raw.githubusercontent.com/folio-org/stripes/master/doc/release-procedure.md</li> </ul>"},{"location":"girls/welcome/","title":"Welcome!","text":""},{"location":"reference/advanced/","title":"Advanced functions to use the MaStR SOAP-API","text":""},{"location":"reference/advanced/#open_mastr.soap_api.download.MaStRAPI","title":"<code>open_mastr.soap_api.download.MaStRAPI</code>","text":"<p>             Bases: <code>object</code></p> <p>Access the Marktstammdatenregister (MaStR) SOAP API via a Python wrapper</p> <p>Read about MaStR account and credentials how to create a user account and a role including a token to access the MaStR SOAP API.</p> <p>Create an <code>MaStRAPI</code> instance with your role credentials</p> <pre><code>   mastr_api = MaStRAPI(\nuser=\"SOM123456789012\",\nkey=\"\"koo5eixeiQuoi'w8deighai8ahsh1Ha3eib3coqu7ceeg%ies...\"\n)\n</code></pre> <p>Alternatively, leave <code>user</code> and <code>key</code> empty if user and token are accessible via <code>credentials.cfg</code>. How to configure this is described here.</p> <pre><code>    mastr_api = MaStRAPI()\n</code></pre> <p>Now, you can use the MaStR API instance to call pre-defined SOAP API queries via the class' methods. For example, get a list of units limited to two entries.</p> <pre><code>   mastr_api.GetListeAlleEinheiten(limit=2)\n</code></pre> <p>Note</p> <p>As the example shows, you don't have to pass credentials for calling wrapped SOAP queries. This is handled internally.</p>"},{"location":"reference/advanced/#open_mastr.soap_api.download.MaStRAPI.__init__","title":"<code>__init__(user=None, key=None)</code>","text":"PARAMETER  DESCRIPTION <code>user</code> <p>MaStR-ID (MaStR-Nummer) for the account that was created on https://www.marktstammdatenregister.de Typical format: SOM123456789012</p> <p> TYPE: <code>str</code> DEFAULT: <code>None</code> </p> <code>key</code> <p>Access token of a role (Benutzerrolle). Might look like: \"koo5eixeiQuoi'w8deighai8ahsh1Ha3eib3coqu7ceeg%ies...\"</p> <p> TYPE: <code>str</code> DEFAULT: <code>None</code> </p>"},{"location":"reference/advanced/#open_mastr.soap_api.download.MaStRDownload","title":"<code>open_mastr.soap_api.download.MaStRDownload</code>","text":"<p>Use the higher level interface for bulk download</p> <p><code>MaStRDownload</code> builds on top of <code>MaStRAPI</code> and provides an interface for easier downloading. Use methods documented below to retrieve specific data. On the example of data for nuclear power plants, this looks like</p> <pre><code>    from open_mastr.soap_api.download import MaStRDownload\nmastr_dl = MaStRDownload()\nfor tech in [\"nuclear\", \"hydro\", \"wind\", \"solar\", \"biomass\", \"combustion\", \"gsgk\"]:\npower_plants = mastr_dl.download_power_plants(tech, limit=10)\nprint(power_plants.head())\n</code></pre> <p>Warning</p> <p>Be careful with increasing <code>limit</code>. Typically, your account allows only for 10,000 API request per day.</p>"},{"location":"reference/advanced/#open_mastr.soap_api.download.MaStRDownload.__init__","title":"<code>__init__(parallel_processes=None)</code>","text":"PARAMETER  DESCRIPTION <code>parallel_processes</code> <p>Specify number of parallel unit data download, respectively the number of processes you want to use for downloading. For single-process download (avoiding the use of python multiprocessing package) choose False. Defaults to number of cores (including hyperthreading).</p> <p> TYPE: <code>int or bool</code> DEFAULT: <code>None</code> </p>"},{"location":"reference/advanced/#open_mastr.soap_api.download.MaStRDownload.additional_data","title":"<code>additional_data(data, unit_ids, data_fcn, timeout=10)</code>","text":"<p>Retrieve addtional informations about units.</p> <p>Extended information on units is available. Depending on type, additional data from EEG and KWK subsidy program are available. Furthermore, for some units, data about permit is retrievable.</p> PARAMETER  DESCRIPTION <code>data</code> <p>data, see :meth:<code>MaStRDownload.download_power_plants</code></p> <p> TYPE: <code>str</code> </p> <code>unit_ids</code> <p>Unit identifier for additional data</p> <p> TYPE: <code>list</code> </p> <code>data_fcn</code> <p>Name of method from :class:<code>MaStRDownload</code> to be used for querying additional data. Choose from</p> <ul> <li>\"extended_unit_data\" (:meth:<code>~.extended_unit_data</code>): Extended information   (i.e. technical, location)   about a unit. The exact set of information depends on the data type.</li> <li>\"eeg_unit_data\" (:meth:<code>~.eeg_unit_data</code>): Unit Information from   EEG unit registry. The exact   set of information depends on the data.</li> <li>\"kwk_unit_data\" (:meth:<code>~.kwk_unit_data</code>): Unit information from KWK unit registry.</li> <li>\"permit_unit_data\" (:meth:<code>~.permit_unit_data</code>): Information about the permit   process of a unit.</li> </ul> <p> TYPE: <code>str</code> </p> <code>timeout</code> <p>Timeout limit for data retrieval for each unit when using multiprocessing. Defaults to 10.</p> <p> DEFAULT: <code>10</code> </p> RETURNS DESCRIPTION <code>tuple of list of dict and tuple</code> <p>Returns additional data in dictionaries that are packed into a list. <pre><code>    return = (\n[additional_unit_data_dict1, additional_unit_data_dict2, ...],\n[tuple(\"SME930865355925\", \"Reason for failing dowload\"), ...]\n)\n</code></pre></p>"},{"location":"reference/advanced/#open_mastr.soap_api.download.MaStRDownload.basic_location_data","title":"<code>basic_location_data(limit=2000, date_from=None, max_retries=3)</code>","text":"<p>Retrieve basic location data in chunks</p> <p>Retrieves data for all types of locations at once using <code>MaStRAPI.GetListeAlleLokationen</code>. Locations include</p> <ul> <li>Electricity generation location (SEL - Stromerzeugungslokation)</li> <li>Electricity consumption location (SVL - Stromverbrauchslokation)</li> <li>Gas generation location (GEL - Gaserzeugungslokation)</li> <li>Gas consumption location (GVL - Gasverbrauchslokation)</li> </ul> PARAMETER  DESCRIPTION <code>limit</code> <p>Maximum number of locations to download.</p> <p>Warning</p> <p>Mind the daily request limit for your MaStR account, usually 10,000 per day.</p> <p> DEFAULT: <code>2000</code> </p> <code>date_from</code> <p>If specified, only locations with latest change date newer than this are queried.</p> <p> DEFAULT: <code>None</code> </p> <code>max_retries</code> <p>Maximum number of retries for each chunk in case of errors with the connection to the server.</p> <p> DEFAULT: <code>3</code> </p> YIELDS DESCRIPTION <code>generator of generators</code> <p>For each chunk a separate generator is returned all wrapped into another generator. Access with</p> <pre><code>    chunks = mastr_dl.basic_location_data(\ndate_from=datetime.datetime(2020, 11, 7, 0, 0, 0), limit=2010\n)\nfor chunk in chunks:\nfor location in chunk:\nprint(location) # prints out one dict per location one after another\n</code></pre>"},{"location":"reference/advanced/#open_mastr.soap_api.download.MaStRDownload.basic_unit_data","title":"<code>basic_unit_data(data=None, limit=2000, date_from=None, max_retries=3)</code>","text":"<p>Download basic unit information for one data type.</p> <p>Retrieves basic information about units. The number of unit in bound to <code>limit</code>.</p> PARAMETER  DESCRIPTION <code>data</code> <p>Technology data is requested for. See :meth:<code>MaStRDownload.download_power_plants</code> for options. Data is retrieved using <code>MaStRAPI.GetGefilterteListeStromErzeuger</code>. If not given, it defaults to <code>None</code>. This implies data for all available technologies is retrieved using the web service function <code>MaStRAPI.GetListeAlleEinheiten</code>.</p> <p> TYPE: <code>str</code> DEFAULT: <code>None</code> </p> <code>limit</code> <p>Maximum number of units to download. If not provided, data for all units is downloaded.</p> <p>Warning</p> <p>Mind the daily request limit for your MaStR account.</p> <p> TYPE: <code>int</code> DEFAULT: <code>2000</code> </p> <code>date_from</code> <p>If specified, only units with latest change date newer than this are queried. Defaults to <code>None</code>.</p> <p> DEFAULT: <code>None</code> </p> <code>max_retries</code> <p>Maximum number of retries in case of errors with the connection to the server.</p> <p> DEFAULT: <code>3</code> </p> YIELDS DESCRIPTION <code>list of dict</code> <p>A generator of dicts is returned with each dictionary containing information about one unit.</p>"},{"location":"reference/advanced/#open_mastr.soap_api.download.MaStRDownload.download_power_plants","title":"<code>download_power_plants(data, limit=None)</code>","text":"<p>Download power plant unit data for one data type.</p> <p>Based on list with basic information about each unit, subsequently additional data is retrieved:</p> <ul> <li>Extended unit data</li> <li>EEG data is collected during support of renewable energy installations   by the Erneuerbare-Energie-Gesetz.</li> <li>KWK data is collected to the support program Kraft-Waerme-Kopplung</li> <li>Permit data is available for some installations (German: Genehmigungsdaten)</li> </ul> <p>Data is stored in CSV file format in <code>~/open-MaStR/data/&lt;version&gt;/</code> by default.</p> PARAMETER  DESCRIPTION <code>data</code> <p>Retrieve unit data for one power system unit. Power plants are grouped by following technologies:</p> <ul> <li>'nuclear'</li> <li>'hydro'</li> <li>'solar'</li> <li>'wind'</li> <li>'biomass'</li> <li>'combustion'</li> <li>'gsgk'</li> <li>'storage'</li> </ul> <p> TYPE: <code>str</code> </p> <code>limit</code> <p>Maximum number of units to be downloaded.</p> <p> TYPE: <code>int</code> DEFAULT: <code>None</code> </p> RETURNS DESCRIPTION <code>pd.DataFrame</code> <p>Joined data tables.</p>"},{"location":"reference/advanced/#open_mastr.soap_api.download.MaStRDownload.eeg_unit_data","title":"<code>eeg_unit_data(unit_specs)</code>","text":"<p>Download EEG (Erneuerbare Energien Gesetz) data for a unit.</p> <p>Additional data collected during a subsidy program for supporting installations of renewable energy power plants.</p> PARAMETER  DESCRIPTION <code>unit_specs</code> <p>EegMastrnummer and data type as tuple that for example looks like</p> <p>.. code-block:: python</p> <p>tuple(\"EEG961554380393\", \"hydro\")</p> <p> TYPE: <code>tuple</code> </p> RETURNS DESCRIPTION <code>dict</code> <p>EEG details about unit, if download successful, otherwise empty dict</p> <code>tuple</code> <p>EegMastrNummer and message the explains why a download failed. Format</p> <pre><code>   tuple(\"EEG961554380393\", \"Reason for failing dowload\")\n</code></pre>"},{"location":"reference/advanced/#open_mastr.soap_api.download.MaStRDownload.extended_unit_data","title":"<code>extended_unit_data(unit_specs)</code>","text":"<p>Download extended data for a unit.</p> <p>This extended unit information is provided separately.</p> PARAMETER  DESCRIPTION <code>unit_specs</code> <p>EinheitMastrNummer and data type as tuple that for example looks like</p> <pre><code>   tuple(\"SME930865355925\", \"hydro\")\n</code></pre> <p> TYPE: <code>tuple</code> </p> RETURNS DESCRIPTION <code>dict</code> <p>Extended information about unit, if download successful, otherwise empty dict</p> <code>tuple</code> <p>EinheitMastrNummer and message the explains why a download failed. Format</p> <pre><code>   tuple(\"SME930865355925\", \"Reason for failing dowload\")\n</code></pre>"},{"location":"reference/advanced/#open_mastr.soap_api.download.MaStRDownload.kwk_unit_data","title":"<code>kwk_unit_data(unit_specs)</code>","text":"<p>Download KWK (german: Kraft-W\u00e4rme-Kopplung, english: Combined Heat and Power, CHP) data for a unit.</p> <p>Additional data collected during a subsidy program for supporting combined heat power plants.</p> PARAMETER  DESCRIPTION <code>unit_specs</code> <p>KwkMastrnummer and data type as tuple that for example looks like</p> <pre><code>   tuple(\"KWK910493229164\", \"biomass\")\n</code></pre> <p> TYPE: <code>tuple</code> </p> RETURNS DESCRIPTION <code>dict</code> <p>KWK details about unit, if download successful, otherwise empty dict</p> <code>tuple</code> <p>KwkMastrNummer and message the explains why a download failed. Format</p> <pre><code>   tuple(\"KWK910493229164\", \"Reason for failing dowload\")\n</code></pre>"},{"location":"reference/advanced/#open_mastr.soap_api.download.MaStRDownload.location_data","title":"<code>location_data(specs)</code>","text":"<p>Download extended data for a location</p> <p>Allows to download additional data for different location types, see specs.</p> PARAMETER  DESCRIPTION <code>specs</code> <p>Location Mastrnummer and data_name as tuple that for example looks like</p> <pre><code>   tuple(\"SEL927688371072\", \"location_elec_generation\")\n</code></pre> <p> TYPE: <code>tuple</code> </p> RETURNS DESCRIPTION <code>dict</code> <p>Detailed information about a location, if download successful, otherwise empty dict</p> <code>tuple</code> <p>Location MastrNummer and message the explains why a download failed. Format</p> <pre><code>   tuple(\"SEL927688371072\", \"Reason for failing dowload\")\n</code></pre>"},{"location":"reference/advanced/#open_mastr.soap_api.download.MaStRDownload.permit_unit_data","title":"<code>permit_unit_data(unit_specs)</code>","text":"<p>Download permit data for a unit.</p> PARAMETER  DESCRIPTION <code>unit_specs</code> <p>GenMastrnummer and data type as tuple that for example looks like</p> <pre><code>   tuple(\"SGE952474728808\", \"biomass\")\n</code></pre> <p> TYPE: <code>tuple</code> </p> RETURNS DESCRIPTION <code>dict</code> <p>Permit details about unit, if download successful, otherwise empty dict</p> <code>tuple</code> <p>GenMastrNummer and message the explains why a download failed. Format</p> <pre><code>   tuple(\"GEN952474728808\", \"Reason for failing dowload\")\n</code></pre>"},{"location":"reference/advanced/#open_mastr.soap_api.mirror.MaStRMirror","title":"<code>open_mastr.soap_api.mirror.MaStRMirror</code>","text":"<p>Mirror the Marktstammdatenregister database and keep it up-to-date.</p> <p>A PostgreSQL database is used to mirror the MaStR database. It builds on functionality for bulk data download provided by <code>MaStRDownload</code>.</p> <p>A rough overview is given by the following schema on the example of wind power units. </p> <p>Initially, basic unit data gets backfilled with <code>~.backfill_basic</code> (downloads basic unit data for 2,000 units of type 'solar').</p> <p><pre><code>   from open_mastr.soap_api.prototype_mastr_reflected import MaStRMirror\nmastr_mirror = MaStRMirror()\nmastr_mirror.backfill_basic(\"solar\", limit=2000)\n</code></pre> Based on this, requests for additional data are created. This happens during backfilling basic data. But it is also possible to (re-)create requests for remaining additional data using <code>MaStRMirror.create_additional_data_requests</code>.</p> <pre><code>   mastr_mirror.create_additional_data_requests(\"solar\")\n</code></pre> <p>Additional unit data, in the case of wind power this is extended data, EEG data and permit data, can be retrieved subsequently by <code>~.retrieve_additional_data</code>.</p> <pre><code>    mastr_mirror.retrieve_additional_data(\"solar\", [\"unit_data\"])\n</code></pre> <p>The data can be joined to one table for each data type and exported to CSV files using <code>MaStRMirror.to_csv</code>.</p> <p>Also consider to use <code>~.dump</code> and <code>~.restore</code> for specific purposes.</p> <p>Note</p> <p>This feature was built before the bulk download was offered at marktstammdatenregister.de. It can still be used to compare the two datasets received from the API and the bulk download.</p>"},{"location":"reference/advanced/#open_mastr.soap_api.mirror.MaStRMirror.__init__","title":"<code>__init__(engine, restore_dump=None, parallel_processes=None)</code>","text":"PARAMETER  DESCRIPTION <code>engine</code> <p>database engine</p> <p> </p> <code>restore_dump</code> <p>Save path of SQL dump file including filename. The database is restored from the SQL dump. Defaults to <code>None</code> which means nothing gets restored. Should be used in combination with <code>empty_schema=True</code>.</p> <p> DEFAULT: <code>None</code> </p> <code>parallel_processes</code> <p>Number of parallel processes used to download additional data. Defaults to <code>None</code>.</p> <p> DEFAULT: <code>None</code> </p>"},{"location":"reference/advanced/#open_mastr.soap_api.mirror.MaStRMirror.backfill_basic","title":"<code>backfill_basic(data=None, date=None, limit=10 ** 8)</code>","text":"<p>Backfill basic unit data.</p> <p>Fill database table 'basic_units' with data. It allows specification of which data should be retrieved via the described parameter options.</p> <p>Under the hood, <code>MaStRDownload.basic_unit_data</code> is used.</p> PARAMETER  DESCRIPTION <code>data</code> <p>Specify data types for which data should be backfilled.</p> <ul> <li>['solar']: Backfill data for a single data type.</li> <li>['solar', 'wind'] (<code>list</code>):  Backfill data for multiple technologies given in a list.</li> </ul> <p> DEFAULT: <code>None</code> </p> <code>date</code> <p>Specify backfill date from which on data is retrieved</p> <p>Only data with modification time stamp greater that <code>date</code> is retrieved.</p> <ul> <li><code>datetime.datetime(2020, 11, 27)</code>: Retrieve data which is newer than this time stamp</li> <li>'latest': Retrieve data which is newer than the newest data already in the table.   It is aware of a different 'latest date' for each data.   Hence, it works in combination with   <code>data=None</code> and <code>data=[\"wind\", \"solar\"]</code> for example.</li> </ul> <p>!!! warning</p> <pre><code> Don't use 'latest' in combination with `limit`. This might\n lead to unexpected results.\n</code></pre> <ul> <li><code>None</code>: Complete backfill</li> </ul> <p> DEFAULT: <code>None</code> </p> <code>limit</code> <p>Maximum number of units. Defaults to the large number of 10**8 which means all available data is queried. Use with care!</p> <p> DEFAULT: <code>10 ** 8</code> </p>"},{"location":"reference/advanced/#open_mastr.soap_api.mirror.MaStRMirror.backfill_locations_basic","title":"<code>backfill_locations_basic(limit=10 ** 7, date=None, delete_additional_data_requests=True)</code>","text":"<p>Backfill basic location data.</p> <p>Fill database table 'locations_basic' with data. It allows specification of which data should be retrieved via the described parameter options.</p> <p>Under the hood, <code>MaStRDownload.basic_location_data</code> is used.</p> PARAMETER  DESCRIPTION <code>date</code> <p>Specify backfill date from which on data is retrieved</p> <p>Only data with modification time stamp greater that <code>date</code> is retrieved.</p> <ul> <li><code>datetime.datetime(2020, 11, 27)</code>: Retrieve data which is newer than this time stamp</li> <li> <p>'latest': Retrieve data which is newer than the newest data already in the table.   !!! warning</p> <p>Don't use 'latest' in combination with <code>limit</code>. This might lead to  unexpected results. * <code>None</code>: Complete backfill</p> </li> </ul> <p> DEFAULT: <code>None</code> </p> <code>limit</code> <p>Maximum number of locations to download. Defaults to <code>None</code> which means no limit is set and all available data is queried. Use with care!</p> <p> DEFAULT: <code>10 ** 7</code> </p> <code>delete_additional_data_requests</code> <p>Useful to speed up download of data. Ignores existence of already created requests for additional data and skips deletion these.</p> <p> DEFAULT: <code>True</code> </p>"},{"location":"reference/advanced/#open_mastr.soap_api.mirror.MaStRMirror.dump","title":"<code>dump(dumpfile='open-mastr-continuous-update.backup')</code>","text":"<p>Dump MaStR database.</p> PARAMETER  DESCRIPTION <code>dumpfile</code> <p>Save path for dump including filename. When only a filename is given, the dump is saved to CWD.</p> <p> TYPE: <code>str or path - like</code> DEFAULT: <code>'open-mastr-continuous-update.backup'</code> </p>"},{"location":"reference/advanced/#open_mastr.soap_api.mirror.MaStRMirror.restore","title":"<code>restore(dumpfile)</code>","text":"<p>Restore the MaStR database from an SQL dump.</p> PARAMETER  DESCRIPTION <code>dumpfile</code> <p>Save path for dump including filename. When only a filename is given, the dump is restored from CWD.</p> <p> TYPE: <code>str or path - like</code> </p> <p>Warning</p> <p>If tables that are restored from the dump contain data, restore doesn't work!</p>"},{"location":"reference/advanced/#open_mastr.soap_api.mirror.MaStRMirror.retrieve_additional_data","title":"<code>retrieve_additional_data(data, data_type, limit=10 ** 8, chunksize=1000)</code>","text":"<p>Retrieve additional unit data</p> <p>Execute additional data requests stored in <code>open_mastr.soap_api.orm.AdditionalDataRequested</code>. See also docs of <code>MaStRDownload.additional_data</code> for more information on how data is downloaded.</p> PARAMETER  DESCRIPTION <code>data</code> <p>See list of available technologies in <code>open_mastr.soap_api.download.py.MaStRDownload.download_power_plants</code>.</p> <p> </p> <code>data_type</code> <p>Select type of additional data that is to be retrieved. Choose from \"unit_data\", \"eeg_data\", \"kwk_data\", \"permit_data\".</p> <p> </p> <code>limit</code> <p>Limit number of units that data is download for. Defaults to the very large number 10**8 which refers to query data for existing data requests, for example created by <code>~.create_additional_data_requests</code>.</p> <p> DEFAULT: <code>10 ** 8</code> </p> <code>chunksize</code> <p>Data is downloaded and inserted into the database in chunks of <code>chunksize</code>. Defaults to 1000.</p> <p> DEFAULT: <code>1000</code> </p>"},{"location":"reference/advanced/#open_mastr.soap_api.mirror.MaStRMirror.retrieve_additional_location_data","title":"<code>retrieve_additional_location_data(location_type, limit=10 ** 8, chunksize=1000)</code>","text":"<p>Retrieve extended location data</p> <p>Execute additional data requests stored in <code>open_mastr.soap_api.orm.AdditionalLocationsRequested</code>. See also docs of <code>open_mastr.soap_api.download.py.MaStRDownload.additional_data</code> for more information on how data is downloaded.</p> PARAMETER  DESCRIPTION <code>location_type</code> <p>Select type of location that is to be retrieved. Choose from \"location_elec_generation\", \"location_elec_consumption\", \"location_gas_generation\", \"location_gas_consumption\".</p> <p> </p> <code>limit</code> <p>Limit number of locations that data is download for. Defaults large number 10**8 which refers to query data for existing data requests.</p> <p> DEFAULT: <code>10 ** 8</code> </p> <code>chunksize</code> <p>Data is downloaded and inserted into the database in chunks of <code>chunksize</code>. Defaults to 1000.</p> <p> DEFAULT: <code>1000</code> </p>"},{"location":"reference/basic/","title":"Basic functions","text":""},{"location":"reference/basic/#open_mastr.Mastr","title":"<code>open_mastr.Mastr</code>","text":"<p><code>Mastr</code> is used to download the MaStR database and keep it up-to-date.</p> <p>A SQL database is used to mirror the MaStR database. It can be filled with data either from the MaStR-bulk download or from the MaStR-API.</p> PARAMETER  DESCRIPTION <code>engine</code> <p>Defines the engine of the database where the MaStR is mirrored to. Default is 'sqlite'.</p> <p> DEFAULT: <code>'sqlite'</code> </p> <p>Example</p> <pre><code>from open_mastr import Mastr\ndb = Mastr()\ndb.download()\n</code></pre>"},{"location":"reference/basic/#open_mastr.mastr.Mastr.download","title":"<code>download(method='bulk', data=None, date=None, bulk_cleansing=True, api_processes=None, api_limit=50, api_chunksize=1000, api_data_types=None, api_location_types=None, **kwargs)</code>","text":"<p>Download the MaStR either via the bulk download or via the MaStR API and write it to a SQLite database.</p> PARAMETER  DESCRIPTION <code>method</code> <p>Either \"API\" or \"bulk\". Determines whether the data is downloaded via the zipped bulk download or via the MaStR API. The latter requires an account from marktstammdatenregister.de, (see :ref:<code>Configuration &lt;Configuration&gt;</code>). Default to 'bulk'.</p> <p> TYPE: <code>API or bulk</code> DEFAULT: <code>'bulk'</code> </p> <code>data</code> <p>Determines which types of data are written to the database. If None, all data is used. If it is a list, possible entries are listed below with respect to the download method. Missing categories are being developed. If only one data is of interest, this can be given as a string. Default to None, where all data is included.</p> Data Bulk API \"wind\" Yes Yes \"solar\" Yes Yes \"biomass\" Yes Yes \"hydro\" Yes Yes \"gsgk\" Yes Yes \"combustion\" Yes Yes \"nuclear\" Yes Yes \"gas\" Yes Yes \"storage\" Yes Yes \"electricity_consumer\" Yes No \"location\" Yes Yes \"market\" Yes No \"grid\" Yes No \"balancing_area\" Yes No \"permit\" Yes Yes \"deleted_units\" Yes No \"retrofit_units\" Yes No <p> TYPE: <code>str or list or None</code> DEFAULT: <code>None</code> </p> <code>date</code> date Bulk API \"today\" latest files are downloaded from marktstammdatenregister.de - \"20230101\" If file from this date exists locally, it is used. Otherwise it throws an error (You can only receive todays data from the server) - \"latest\" - Retrieve data that is newer than the newest data already in the table datetime.datetime(2020, 11, 27) - Retrieve data that is newer than this time stamp None set date=\"today\" set date=\"latest\" <p>Default to <code>None</code>.</p> <p> TYPE: <code>None or `datetime.datetime` or str</code> DEFAULT: <code>None</code> </p> <code>bulk_cleansing</code> <p>If True, data cleansing is applied after the download (which is recommended). Default to True.</p> <p> TYPE: <code>bool</code> DEFAULT: <code>True</code> </p> <code>api_processes</code> <p>Number of parallel processes used to download additional data. Defaults to <code>None</code>. If set to \"max\", the maximum number of possible processes is used.</p> <p>Warning</p> <p>The implementation of parallel processes is currently under construction. Please let the argument <code>api_processes</code> at the default value <code>None</code>.</p> <p> TYPE: <code>int or None or max</code> DEFAULT: <code>None</code> </p> <code>api_limit</code> <p>Limit the number of units that data is downloaded for. Defaults to <code>None</code> which refers to query data for existing data requests, for example created by <code>create_additional_data_requests</code>. Note: There is a limited number of requests you are allowed to have per day, so setting api_limit to a value is recommended.</p> <p> TYPE: <code>int or None</code> DEFAULT: <code>50</code> </p> <code>api_chunksize</code> <p>Data is downloaded and inserted into the database in chunks of <code>chunksize</code>. Defaults to 1000.</p> <p> TYPE: <code>int or None</code> DEFAULT: <code>1000</code> </p> <code>api_data_types</code> <p>Select the type of additional data that should be retrieved. Choose from \"unit_data\", \"eeg_data\", \"kwk_data\", \"permit_data\". Defaults to all.</p> <p> TYPE: <code>list or None</code> DEFAULT: <code>None</code> </p> <code>api_location_types</code> <p>Select the type of location that should be retrieved. Choose from \"location_elec_generation\", \"location_elec_consumption\", \"location_gas_generation\", \"location_gas_consumption\". Defaults to all.</p> <p> TYPE: <code>list or None</code> DEFAULT: <code>None</code> </p>"},{"location":"reference/basic/#open_mastr.mastr.Mastr.to_csv","title":"<code>to_csv(tables=None, chunksize=500000, limit=None)</code>","text":"<p>Save the database as csv files along with the metadata file. If 'tables=None' all possible tables will be exported.</p> PARAMETER  DESCRIPTION <code>tables</code> <p>For exporting selected tables choose from:     [\"wind\", \"solar\", \"biomass\", \"hydro\", \"gsgk\", \"combustion\", \"nuclear\", \"storage\",     \"balancing_area\", \"electricity_consumer\", \"gas_consumer\", \"gas_producer\",     \"gas_storage\", \"gas_storage_extended\",     \"grid_connections\", \"grids\", \"market_actors\", \"market_roles\",     \"locations_extended, 'permit', 'deleted_units' ]</p> <p> TYPE: <code>list</code> DEFAULT: <code>None</code> </p> <code>chunksize</code> <p>Defines the chunksize of the tables export. Default value is 500.000 rows to include in each chunk.</p> <p> TYPE: <code>int</code> DEFAULT: <code>500000</code> </p> <code>limit</code> <p>Limits the number of exported data rows.</p> <p> TYPE: <code>int</code> DEFAULT: <code>None</code> </p>"}]}